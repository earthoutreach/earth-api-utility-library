/*
Copyright 2008 Google Inc.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
var geo={isnamespace_:true};if(!("map" in Array.prototype)){Array.prototype.map=function(e){var a=this.length;if(typeof e!="function"){throw new TypeError("map() requires a mapping function.")}var d=new Array(a);var c=arguments[1];for(var b=0;b<a;b++){if(b in this){d[b]=e.call(c,this[b],b,this)}}return d}}geo.Bounds=function(){if(arguments.length==1){if(arguments[0].constructor===geo.Bounds){var b=arguments[0];this.sw_=new geo.Point(b.southWestBottom());this.ne_=new geo.Point(b.northEastTop())}else{this.sw_=this.ne_=new geo.Point(arguments[0])}}else{if(arguments.length==2){var a=new geo.Point(arguments[0]);var c=new geo.Point(arguments[1]);if(!a&&!c){return}else{if(!a){a=c}else{if(!c){c=a}}}if(a.lat()>c.lat()){throw new RangeError("Bounds southwest coordinate cannot be north of the northeast coordinate")}if(a.altitude()>c.altitude()){throw new RangeError("Bounds southwest coordinate cannot be north of the northeast coordinate")}this.sw_=a;this.ne_=c}}};geo.Bounds.prototype.southWestBottom=function(){return this.sw_};geo.Bounds.prototype.sw_=null;geo.Bounds.prototype.northEastTop=function(){return this.ne_};geo.Bounds.prototype.ne_=null;geo.Bounds.prototype.crossesAntimeridian=function(){return(this.sw_.lng()>this.ne_.lng())};geo.Bounds.prototype.is3D=function(){return !this.isEmpty()&&(this.sw_.is3D()||this.ne_.is3D())};geo.Bounds.prototype.containsPoint=function(a){if(this.isEmpty()){return false}if(!(this.sw_.lat()<=a.lat()&&a.lat()<=this.ne_.lat())){return false}if(this.is3D()&&!(this.sw_.altitude()<=a.altitude()&&a.altitude()<=this.ne_.altitude())){return false}if(this.crossesAntimeridian()){return(a.lng()<=this.ne_.lng()||a.lng()>=this.sw_.lng())}else{return(this.sw_.lng()<=a.lng()&&a.lng()<=this.ne_.lng())}};geo.Bounds.lngSpan_=function(a,b){return(a>b)?(b+360-a):(b-a)};geo.Bounds.prototype.extend=function(h){if(this.containsPoint(h)){return}if(this.isEmpty()){this.sw_=this.ne_=h;return}var a=this.sw_.altitude();var f=this.ne_.altitude();if(this.is3D()){a=Math.min(this.sw_.altitude(),h.altitude());f=Math.min(this.ne_.altitude(),h.altitude())}var i=Math.min(this.sw_.lat(),h.lat());var e=Math.max(this.ne_.lat(),h.lat());var g=geo.Bounds.lngSpan_(this.sw_.lng(),h.lng());var d=geo.Bounds.lngSpan_(h.lng(),this.ne_.lng());var c=this.sw_.lng();var b=this.ne_.lng();if(g<=d){b=h.lng()}else{c=h.lng()}this.sw_=new geo.Point(i,c,a);this.ne_=new geo.Point(e,b,f)};geo.Bounds.prototype.span=function(){return{lat:(this.ne_.lat()-this.sw_.lat()),lng:geo.Bounds.lngSpan_(this.sw_.lng(),this.ne_.lng()),altitude:this.is3D()?(this.ne_.altitude()-this.sw_.altitude()):null}};geo.Bounds.prototype.isEmpty=function(){return(this.sw_==null&&this.sw_==null)};geo.Bounds.prototype.getCenter=function(){if(this.isEmpty()){return null}return new geo.Point((this.sw_.lat()+this.ne_.lat())/2,this.crossesAntimeridian()?geo.math.normalizeLng(this.sw_.lng()+geo.Bounds.lngSpan_(this.sw_.lng(),this.ne_.lng())/2):(this.sw_.lng()+this.ne_.lng())/2,(this.sw_.altitude()+this.ne_.altitude())/2)};geo.Bounds.prototype.isFullLat=function(){return(this.sw_.lat()==-90&&this.ne_.lng()==90)};geo.Bounds.prototype.isFullLng=function(){return(this.sw_.lng()==-180&&this.ne_.lng()==180)};geo.ALTITUDE_CLAMP_TO_GROUND=0;geo.ALTITUDE_RELATIVE_TO_GROUND=1;geo.ALTITUDE_ABSOLUTE=2;geo.math={isnamespace_:true};if(!("toDegrees" in Number.prototype)){Number.prototype.toDegrees=function(){return this*180/Math.PI}}if(!("toRadians" in Number.prototype)){Number.prototype.toRadians=function(){return this*Math.PI/180}}geo.math.normalizeAngle=function(a){a=a%(2*Math.PI);return a>=0?a:a+2*Math.PI};geo.math.normalizeLat=function(a){return Math.max(-90,Math.min(90,a))};geo.math.normalizeLng=function(a){if(a%360==180){return 180}a=a%360;return a<-180?a+360:a>180?a-360:a};geo.math.reverseAngle=function(a){return geo.math.normalizeAngle(a+Math.PI)};geo.math.EARTH_RADIUS=6378135;geo.math.EARTH_RADIUS_CURVATURE_AVG=6372795;geo.math.distance=function(b,a){return geo.math.EARTH_RADIUS*geo.math.angularDistance(b,a)};geo.math.angularDistance=function(g,f){var e=g.lat().toRadians();var c=f.lat().toRadians();var d=(f.lat()-g.lat()).toRadians();var b=(f.lng()-g.lng()).toRadians();var a=Math.pow(Math.sin(d/2),2)+Math.cos(e)*Math.cos(c)*Math.pow(Math.sin(b/2),2);return 2*Math.atan2(Math.sqrt(a),Math.sqrt(1-a))};geo.math.heading=function(f,d){var c=f.lat().toRadians();var b=d.lat().toRadians();var e=Math.cos(b);var a=(d.lng()-f.lng()).toRadians();return geo.math.normalizeAngle(Math.atan2(Math.sin(a)*e,Math.cos(c)*Math.sin(b)-Math.sin(c)*e*Math.cos(a))).toDegrees()};geo.math.bearing=geo.math.heading;geo.math.midpoint=function(l,i,p){if(geo.util.isUndefined(p)||p===null){p=0.5}var m=l.lat().toRadians();var j=i.lat().toRadians();var g=l.lng().toRadians();var f=i.lng().toRadians();var c=Math.cos(m);var a=Math.cos(j);var o=geo.math.angularDistance(l,i);var e=Math.sin(o);var d=Math.sin((1-p)*o)/e;var b=Math.sin(p*o)/e;var n=d*c*Math.cos(g)+b*a*Math.cos(f);var k=d*c*Math.sin(g)+b*a*Math.sin(f);var h=d*Math.sin(m)+b*Math.sin(j);return new geo.Point(Math.atan2(h,Math.sqrt(Math.pow(n,2)+Math.pow(k,2))).toDegrees(),Math.atan2(k,n).toDegrees())};geo.math.destination=function(b,i){if(!("heading" in i&&"distance" in i)){throw new TypeError("destination() requres both heading and distance options.")}var g=b.lat().toRadians();var e=Math.sin(g);var h=i.distance/geo.math.EARTH_RADIUS;var a=i.heading.toRadians();var d=Math.sin(h);var c=Math.cos(h);var f=Math.asin(e*c+Math.cos(g)*d*Math.cos(a));return new geo.Point(f.toDegrees(),Math.atan2(Math.sin(a)*d*Math.cos(f),c-e*Math.sin(f)).toDegrees()+b.lng())};geo.Path=function(){this.coords_=[];var a=null;var b;if(arguments.length==1){var d=arguments[0];if(d.constructor===geo.Path){for(b=0;b<d.numCoords();b++){this.coords_.push(new geo.Point(d.coord(b)))}}else{if(geo.util.isArray(d)){if(!d.length||geo.util.isArray(d[0])){a=d}else{a=[d]}}else{if(geo.util.isEarthAPIObject_(d)){var c=d.getType();if(c=="KmlLineString"||c=="KmlLinearRing"){var e=d.getCoordinates().getLength();for(b=0;b<e;b++){this.coords_.push(new geo.Point(d.getCoordinates().get(b)))}}else{throw new TypeError("Could not create a path from the given arguments")}}else{throw new TypeError("Could not create a path from the given arguments")}}}}else{a=arguments}if(a){for(b=0;b<a.length;b++){this.coords_.push(new geo.Point(a[b]))}}};geo.Path.prototype.coords_=null;geo.Path.prototype.toString=function(){return"["+this.coords_.map(function(a){return a.toString()}).join(", ")+"]"};geo.Path.prototype.equals=function(b){for(var a=0;a<b.numCoords();a++){if(!this.coord(a).equals(b.coord(a))){return false}}return true};geo.Path.prototype.numCoords=function(){return this.coords_.length};geo.Path.prototype.coord=function(a){return this.coords_[a]};geo.Path.prototype.prepend=function(a){this.coords_.unshift(new geo.Point(a))};geo.Path.prototype.append=function(a){this.coords_.push(new geo.Point(a))};geo.Path.prototype.insert=function(a,b){this.coords_.splice(a,0,new geo.Point(b))};geo.Path.prototype.remove=function(a){this.coords_.splice(a,1)};geo.Path.prototype.subPath=function(b,a){return this.coords_.slice(b,a)};geo.Path.prototype.distance=function(){var b=0;for(var a=0;a<this.coords_.length-1;a++){b+=this.coords_[a].distance(this.coords_[a+1])}return b};geo.Path.prototype.containsPoint=function(b){var e=false;var f=b.lat();var a=b.lng();for(var d=0;d<this.coords_.length;d++){var c=(d+1)%this.coords_.length;if(((this.coords_[d].lat()<f&&this.coords_[c].lat()>=f)||(this.coords_[c].lat()<f&&this.coords_[d].lat()>=f))&&(this.coords_[d].lng()+(f-this.coords_[d].lat())/(this.coords_[c].lat()-this.coords_[d].lat())*(this.coords_[c].lng()-this.coords_[d].lng())<a)){e=!e}}return e};geo.Point=function(){var b=null;if(arguments.length==1){var a=arguments[0];if(a.constructor===geo.Point){this.lat_=a.lat();this.lng_=a.lng();this.altitude_=a.altitude();this.altitudeMode_=a.altitudeMode()}else{if(geo.util.isArray(a)){b=a}else{if(geo.util.isEarthAPIObject_(a)){var c=a.getType();if(c=="KmlPoint"||c=="KmlLookAt"){this.lat_=a.getLatitude();this.lng_=a.getLongitude();this.altitude_=a.getAltitude();this.altitudeMode_=a.getAltitudeMode()}else{if(c=="KmlCoord"||c=="KmlLocation"){this.lat_=a.getLatitude();this.lng_=a.getLongitude();this.altitude_=a.getAltitude()}else{throw new TypeError("Could not create a point from the given Earth object")}}}else{throw new TypeError("Could not create a point from the given arguments")}}}}else{b=arguments}if(b){this.lat_=b[0];this.lng_=b[1];if(b.length>=3){this.altitude_=b[2];if(b.length>=4){this.altitudeMode_=b[3]}}}this.lat_=geo.math.normalizeLat(this.lat_);this.lng_=geo.math.normalizeLng(this.lng_)};geo.Point.prototype.lat=function(){return this.lat_};geo.Point.prototype.lat_=0;geo.Point.prototype.lng=function(){return this.lng_};geo.Point.prototype.lng_=0;geo.Point.prototype.altitude=function(){return this.altitude_};geo.Point.prototype.altitude_=0;geo.Point.prototype.altitudeMode=function(){return this.altitudeMode_};geo.Point.prototype.altitudeMode_=geo.ALTITUDE_RELATIVE_TO_GROUND;geo.Point.prototype.toString=function(){return"("+this.lat().toString()+", "+this.lng().toString()+", "+this.altitude().toString()+")"};geo.Point.prototype.flatten=function(){return new geo.Point(this.lat(),this.lng())};geo.Point.prototype.is3D=function(){return this.altitude_!=0};geo.Point.prototype.equals=function(a){return this.lat()==a.lat()&&this.lng()==a.lng()&&this.altitude()==a.altitude()&&this.altitudeMode()==a.altitudeMode()};geo.Point.prototype.angularDistance=function(a){return geo.math.angularDistance(this,a)};geo.Point.prototype.distance=function(a){return geo.math.distance(this,a)};geo.Point.prototype.heading=function(a){return geo.math.heading(this,a)};geo.Point.prototype.midpoint=function(a,b){return geo.math.midpoint(this,a,b)};geo.Point.prototype.destination=function(a){return geo.math.destination(this,a)};geo.Polygon=function(){this.innerBoundaries_=[];var b;if(arguments.length===0){this.outerBoundary_=new geo.Path()}else{if(arguments.length==1){var d=arguments[0];if(d.constructor===geo.Polygon){this.outerBoundary_=new geo.Path(d.outerBoundary());for(b=0;b<d.innerBoundaries().length;b++){this.innerBoundaries_.push(new geo.Path(d.innerBoundaries()[b]))}}else{if(geo.util.isEarthAPIObject_(d)){var c=d.getType();if(c=="KmlLineString"||c=="KmlLinearRing"){this.outerBoundary_=new geo.Path(d)}else{if(c=="KmlPolygon"){this.outerBoundary_=new geo.Path(d.getOuterBoundary());var a=d.getInnerBoundaries().getChildNodes();var e=a.getLength();for(b=0;b<e;b++){this.innerBoundaries_.push(new geo.Path(a.item(b)))}}else{throw new TypeError("Could not create a polygon from the given arguments")}}}else{this.outerBoundary_=new geo.Path(arguments[0])}}}else{if(arguments[0].length&&typeof arguments[0][0]=="number"){this.outerBoundary_=new geo.Path(arguments)}else{if(arguments[1]){this.outerBoundary_=new geo.Path(arguments[0]);if(!geo.util.isArray(arguments[1])){throw new TypeError("Second argument to geo.Polygon constructor must be an array of paths.")}for(b=0;b<arguments[1].length;b++){this.innerBoundaries_.push(new geo.Path(arguments[1][b]))}}else{throw new Error("Cannot create a path from the given arguments.")}}}}};geo.Polygon.prototype.outerBoundary_=null;geo.Polygon.prototype.innerBoundaries_=null;geo.Polygon.prototype.toString=function(){return"Polygon: "+this.outerBoundary().toString()+(this.innerBoundaries().length?", ("+this.innerBoundaries().length+" inner boundaries)":"")};geo.Polygon.prototype.outerBoundary=function(){return this.outerBoundary_};geo.Polygon.prototype.innerBoundaries=function(){return this.innerBoundaries_};geo.Polygon.prototype.containsPoint=function(a){if(!this.outerBoundary_.containsPoint(a)){return false}for(var b=0;b<this.innerBoundaries_.length;b++){if(this.innerBoundaries_[b].containsPoint(a)){return false}}return true};geo.Polygon.prototype.area=function(){var b=this.outerBoundary_.area();for(var a=0;a<this.innerBoundaries_.length;a++){b-=this.innerBoundaries_[a].area()}return b};geo.util={isnamespace_:true};geo.util.isUndefined=function(a){return typeof a=="undefined"};geo.util.isArray=function(a){return a!==null&&typeof a=="object"&&"splice" in a&&"join" in a};geo.util.isFunction=function(a){return a!==null&&typeof a=="function"&&"call" in a&&"apply" in a};geo.util.isObjectLiteral=function(a){return a!==null&&typeof a=="object"&&a.constructor===Object&&!geo.util.isEarthAPIObject_(a)};geo.util.isEarthAPIObject_=function(a){return a!==null&&(typeof a=="object"||typeof a=="function")&&"getType" in a};
/*
Copyright 2009 Google Inc.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
var GEarthExtensions=function(a){this.pluginInstance=a;function c(d,e){return function(){return d.apply(e,arguments)}}function b(d,f){for(var e in d){var g=d[e];if(geo.util.isFunction(g)&&!g.isclass_){d[e]=c(g,f)}if(GEarthExtensions.isExtensionsNamespace_(g)){b(g,f)}}}b(this,this)};GEarthExtensions.AUTO=Infinity;GEarthExtensions.ALLOWED=null;GEarthExtensions.REQUIRED=undefined;GEarthExtensions.checkParameters=function(b,g,c){var e={};b=b||{};c=c||{};for(var f in b){if(!g&&!(f in c)){var d=[];for(var a in c){d.push(a)}throw new Error("Unexpected parameter '"+f+"'. Allowed parameters are: "+d.join(", ")+".")}e[f]=b[f]}for(f in c){if(!(f in e)){if(c[f]===GEarthExtensions.REQUIRED){throw new Error("Required parameter '"+f+"' was not passed.")}if(c[f]!=GEarthExtensions.ALLOWED&&c[f]!=GEarthExtensions.AUTO){e[f]=c[f]}}}return e};GEarthExtensions.createClass_=function(){var a=[];var c=null;if(geo.util.isArray(arguments[0])){a=arguments[0];c=arguments[1]}else{c=arguments[0]}c.isclass_=true;for(var d=0;d<a.length;d++){for(var b in a[d].prototype){c.prototype[b]=a[d].prototype[b]}}return c};GEarthExtensions.isExtensionsNamespace_=function(a){return a!==null&&typeof a=="object"&&"isnamespace_" in a&&a.isnamespace_};GEarthExtensions.isInstanceOfEarthInterface=function(a,b){return a!==null&&typeof a=="function"&&"getType" in a&&a.getType()==b};GEarthExtensions.prototype.dom={isnamespace_:true};GEarthExtensions.domBuilder_=function(d){if(d.apiInterface&&!geo.util.isArray(d.apiInterface)){d.apiInterface=[d.apiInterface]}var b=d.base;while(b){if("propertySpec" in b.builderParams){if(!("propertySpec" in d)){d.propertySpec=[]}for(var e in b.builderParams.propertySpec){if(!(e in d.propertySpec)){d.propertySpec[e]=b.builderParams.propertySpec[e]}}}if(!d.apiInterface){d.apiInterface=b.builderParams.apiInterface}if(!d.apiFactoryFn){d.apiFactoryFn=b.builderParams.apiFactoryFn}b=b.builderParams.base}var c={id:""};for(e in c){if(!(e in d.propertySpec)){d.propertySpec[e]=c[e]}}var a=function(){var h={};var j;if(arguments.length===0){throw new TypeError("Cannot create object without any arguments!")}else{if(arguments.length==1){for(j=0;j<d.apiInterface.length;j++){if(GEarthExtensions.isInstanceOfEarthInterface(arguments[0],d.apiInterface[j])){return arguments[0]}}var f=arguments[0];if(geo.util.isObjectLiteral(f)){h=f}else{if("defaultProperty" in d){h[d.defaultProperty]=f}else{throw new TypeError("Expected options object")}}}else{if(arguments.length==2){if("defaultProperty" in d){h=arguments[1];h[d.defaultProperty]=arguments[0]}else{throw new Error("No default property for the DOM builder")}}}}h=GEarthExtensions.checkParameters(h,false,d.propertySpec);var g=this.util.callMethod(this.pluginInstance,d.apiFactoryFn,h.id);if(!geo.util.isUndefined(d.constructor)){d.constructor.call(this,g,h)}b=d.base;while(b){if("constructor" in b.builderParams){b.builderParams.constructor.call(this,g,h)}b=b.builderParams.base}for(var k in d.propertySpec){if(d.propertySpec[k]===GEarthExtensions.AUTO&&k in h){this.util.callMethod(g,"set"+k.charAt(0).toUpperCase()+k.substr(1),h[k])}}return g};a.builderParams=d;return a};GEarthExtensions.prototype.dom.buildFeature_=GEarthExtensions.domBuilder_({propertySpec:{name:GEarthExtensions.AUTO,visibility:GEarthExtensions.AUTO,description:GEarthExtensions.AUTO,snippet:GEarthExtensions.AUTO}});GEarthExtensions.prototype.dom.buildPlacemark=GEarthExtensions.domBuilder_({apiInterface:"KmlPlacemark",base:GEarthExtensions.prototype.dom.buildFeature_,apiFactoryFn:"createPlacemark",propertySpec:{point:GEarthExtensions.ALLOWED,lineString:GEarthExtensions.ALLOWED,linearRing:GEarthExtensions.ALLOWED,polygon:GEarthExtensions.ALLOWED,model:GEarthExtensions.ALLOWED,geometries:GEarthExtensions.ALLOWED,stockIcon:GEarthExtensions.ALLOWED,icon:GEarthExtensions.ALLOWED,style:GEarthExtensions.ALLOWED,highlightStyle:GEarthExtensions.ALLOWED},constructor:function(d,a){var b=[];if(a.point){b.push(this.dom.buildPoint(a.point))}if(a.lineString){b.push(this.dom.buildLineString(a.lineString))}if(a.linearRing){b.push(this.dom.buildLinearRing(a.linearRing))}if(a.polygon){b.push(this.dom.buildPolygon(a.polygon))}if(a.model){b.push(this.dom.buildModel(a.model))}if(a.geometries){b=b.concat(a.geometries)}if(b.length>1){d.setGeometry(this.dom.buildMultiGeometry(b))}else{if(b.length==1){d.setGeometry(b[0])}}if(a.stockIcon){a.icon=a.icon||{};a.icon.stockIcon=a.stockIcon}if(a.icon){if(!a.style){a.style={}}a.style.icon=a.icon}if(a.style){if(a.highlightStyle){var c=this.pluginInstance.createStyleMap(a.id);if(typeof a.style=="string"){c.setNormalStyleUrl(a.style)}else{c.setNormalStyle(this.dom.buildStyle(a.style))}if(typeof a.highlightStyle=="string"){c.setHighlightStyleUrl(a.highlightStyle)}else{c.setHighlightStyle(this.dom.buildStyle(a.highlightStyle))}d.setStyleSelector(c)}else{if(typeof a.style=="string"){d.setStyleUrl(a.style)}else{d.setStyleSelector(this.dom.buildStyle(a.style))}}}}});GEarthExtensions.prototype.dom.buildPointPlacemark=GEarthExtensions.domBuilder_({base:GEarthExtensions.prototype.dom.buildPlacemark,defaultProperty:"point"});GEarthExtensions.prototype.dom.buildLineStringPlacemark=GEarthExtensions.domBuilder_({base:GEarthExtensions.prototype.dom.buildPlacemark,defaultProperty:"lineString"});GEarthExtensions.prototype.dom.buildPolygonPlacemark=GEarthExtensions.domBuilder_({base:GEarthExtensions.prototype.dom.buildPlacemark,defaultProperty:"polygon"});GEarthExtensions.prototype.dom.buildNetworkLink=GEarthExtensions.domBuilder_({apiInterface:"KmlNetworkLink",base:GEarthExtensions.prototype.dom.buildFeature_,apiFactoryFn:"createNetworkLink",defaultProperty:"link",propertySpec:{link:GEarthExtensions.ALLOWED,flyToView:GEarthExtensions.AUTO,refreshVisibility:GEarthExtensions.AUTO},constructor:function(b,a){if(a.link){b.setLink(this.dom.buildLink(a.link))}}});GEarthExtensions.prototype.dom.buildContainer_=GEarthExtensions.domBuilder_({base:GEarthExtensions.prototype.dom.buildFeature_,propertySpec:{children:GEarthExtensions.ALLOWED},constructor:function(c,a){if(a.children){for(var b=0;b<a.children.length;b++){c.getFeatures().appendChild(a.children[b])}}}});GEarthExtensions.prototype.dom.buildFolder=GEarthExtensions.domBuilder_({apiInterface:"KmlFolder",base:GEarthExtensions.prototype.dom.buildContainer_,apiFactoryFn:"createFolder",defaultProperty:"children"});GEarthExtensions.prototype.dom.buildDocument=GEarthExtensions.domBuilder_({apiInterface:"KmlDocument",base:GEarthExtensions.prototype.dom.buildContainer_,apiFactoryFn:"createDocument",defaultProperty:"children"});GEarthExtensions.prototype.dom.buildOverlay_=GEarthExtensions.domBuilder_({base:GEarthExtensions.prototype.dom.buildFeature_,propertySpec:{color:GEarthExtensions.ALLOWED,icon:GEarthExtensions.ALLOWED,drawOrder:GEarthExtensions.AUTO},constructor:function(c,a){if(a.color){c.getColor().set(this.util.parseColor(a.color))}if(a.icon){var b=this.pluginInstance.createIcon("");c.setIcon(b);if(typeof a.icon=="string"){b.setHref(a.icon)}}}});GEarthExtensions.prototype.dom.buildGroundOverlay=GEarthExtensions.domBuilder_({apiInterface:"KmlGroundOverlay",base:GEarthExtensions.prototype.dom.buildOverlay_,apiFactoryFn:"createGroundOverlay",defaultProperty:"icon",propertySpec:{box:GEarthExtensions.REQUIRED,altitude:GEarthExtensions.AUTO,altitudeMode:GEarthExtensions.AUTO},constructor:function(a,b){if(b.box){var c=this.pluginInstance.createLatLonBox("");c.setBox(b.box.north,b.box.south,b.box.east,b.box.west,b.box.rotation?b.box.rotation:0);a.setLatLonBox(c)}}});GEarthExtensions.prototype.dom.buildScreenOverlay=GEarthExtensions.domBuilder_({apiInterface:"KmlScreenOverlay",base:GEarthExtensions.prototype.dom.buildOverlay_,apiFactoryFn:"createScreenOverlay",defaultProperty:"icon",propertySpec:{overlayXY:GEarthExtensions.REQUIRED,screenXY:GEarthExtensions.REQUIRED,size:GEarthExtensions.REQUIRED,rotation:GEarthExtensions.AUTO,rotationXY:GEarthExtensions.ALLOWED},constructor:function(a,b){this.dom.setVec2(a.getOverlayXY(),b.overlayXY);this.dom.setVec2(a.getScreenXY(),b.screenXY);this.dom.setVec2(a.getSize(),b.size);if("rotationXY" in b){this.dom.setVec2(a.getRotationXY(),b.rotationXY)}}});(function(){var b=["Placemark","PointPlacemark","LineStringPlacemark","PolygonPlacemark","Folder","NetworkLink","GroundOverlay","Style"];for(var a=0;a<b.length;a++){GEarthExtensions.prototype.dom["add"+b[a]]=function(c){return function(){var d=this.dom["build"+c].apply(null,arguments);this.pluginInstance.getFeatures().appendChild(d);return d}}(b[a])}})();GEarthExtensions.prototype.dom.buildExtrudableGeometry_=GEarthExtensions.domBuilder_({propertySpec:{altitudeMode:GEarthExtensions.AUTO,extrude:GEarthExtensions.AUTO,tessellate:GEarthExtensions.AUTO}});GEarthExtensions.prototype.dom.buildPoint=GEarthExtensions.domBuilder_({apiInterface:"KmlPoint",base:GEarthExtensions.prototype.dom.buildExtrudableGeometry_,apiFactoryFn:"createPoint",defaultProperty:"point",propertySpec:{point:GEarthExtensions.REQUIRED},constructor:function(b,c){var a=new geo.Point(c.point);b.set(a.lat(),a.lng(),a.altitude(),a.altitudeMode(),false,false)}});GEarthExtensions.prototype.dom.buildLineString=GEarthExtensions.domBuilder_({apiInterface:"KmlLineString",base:GEarthExtensions.prototype.dom.buildExtrudableGeometry_,apiFactoryFn:"createLineString",defaultProperty:"path",propertySpec:{path:GEarthExtensions.REQUIRED},constructor:function(c,b){var a=c.getCoordinates();var f=new geo.Path(b.path);var e=f.numCoords();for(var d=0;d<e;d++){a.pushLatLngAlt(f.coord(d).lat(),f.coord(d).lng(),f.coord(d).altitude())}}});GEarthExtensions.prototype.dom.buildLinearRing=GEarthExtensions.domBuilder_({apiInterface:"KmlLinearRing",base:GEarthExtensions.prototype.dom.buildLineString,apiFactoryFn:"createLinearRing",defaultProperty:"path",constructor:function(a,b){}});GEarthExtensions.prototype.dom.buildPolygon=GEarthExtensions.domBuilder_({apiInterface:"KmlPolygon",base:GEarthExtensions.prototype.dom.buildExtrudableGeometry_,apiFactoryFn:"createPolygon",defaultProperty:"polygon",propertySpec:{polygon:GEarthExtensions.REQUIRED},constructor:function(e,b){var d=new geo.Polygon(b.polygon);e.setOuterBoundary(this.dom.buildLinearRing(d.outerBoundary()));if(d.innerBoundaries().length){var a=d.innerBoundaries();for(var c=0;c<a.length;c++){e.getInnerBoundaries().appendChild(this.dom.buildLinearRing(a[c]))}}}});GEarthExtensions.prototype.dom.buildModel=GEarthExtensions.domBuilder_({apiInterface:"KmlModel",apiFactoryFn:"createModel",defaultProperty:"link",propertySpec:{link:GEarthExtensions.ALLOWED,location:GEarthExtensions.ALLOWED,scale:GEarthExtensions.ALLOWED,orientation:GEarthExtensions.ALLOWED},constructor:function(f,b){if(b.link){f.setLink(this.dom.buildLink(b.link))}if(b.location){var a=new geo.Point(b.location);var e=this.pluginInstance.createLocation("");e.setLatLngAlt(a.lat(),a.lng(),a.altitude());f.setLocation(e);f.setAltitudeMode(a.altitudeMode())}if(b.scale){var c=this.pluginInstance.createScale("");if(typeof b.scale=="number"){c.set(b.scale,b.scale,b.scale)}else{if(geo.util.isArray(b.scale)){c.set(b.scale[0],b.scale[1],b.scale[2])}}f.setScale(c)}if(b.orientation){var d=this.pluginInstance.createOrientation("");if("heading" in b.orientation&&"tilt" in b.orientation&&"roll" in b.orientation){d.set(b.orientation.heading,b.orientation.tilt,b.orientation.roll)}f.setOrientation(d)}}});GEarthExtensions.prototype.dom.buildMultiGeometry=GEarthExtensions.domBuilder_({apiInterface:"KmlMultiGeometry",apiFactoryFn:"createMultiGeometry",defaultProperty:"geometries",propertySpec:{geometries:GEarthExtensions.ALLOWED},constructor:function(b,c){var a=b.getGeometries();if(geo.util.isArray(c.geometries)){for(var d=0;d<c.geometries.length;d++){a.appendChild(c.geometries[d])}}}});GEarthExtensions.prototype.dom.buildLink=GEarthExtensions.domBuilder_({apiInterface:"KmlLink",apiFactoryFn:"createLink",defaultProperty:"href",propertySpec:{href:GEarthExtensions.AUTO,refreshMode:GEarthExtensions.AUTO,refreshInterval:GEarthExtensions.AUTO,viewRefreshMode:GEarthExtensions.AUTO,viewBoundScale:GEarthExtensions.AUTO}});GEarthExtensions.prototype.dom.buildStyle=GEarthExtensions.domBuilder_({apiInterface:["KmlStyle","KmlStyleMap"],apiFactoryFn:"createStyle",propertySpec:{icon:GEarthExtensions.ALLOWED,label:GEarthExtensions.ALLOWED,line:GEarthExtensions.ALLOWED,poly:GEarthExtensions.ALLOWED},constructor:function(f,d){if(d.icon){var g=f.getIconStyle();if(typeof d.icon=="string"){d.icon={href:d.icon}}var e=this.pluginInstance.createIcon("");g.setIcon(e);if("href" in d.icon){e.setHref(d.icon.href)}else{if("stockIcon" in d.icon){e.setHref("http://maps.google.com/mapfiles/kml/"+d.icon.stockIcon+".png")}else{e.setHref("http://maps.google.com/mapfiles/kml/paddle/wht-blank.png");g.getHotSpot().set(0.5,this.pluginInstance.UNITS_FRACTION,0,this.pluginInstance.UNITS_FRACTION)}}if("scale" in d.icon){g.setScale(d.icon.scale)}if("heading" in d.icon){g.setHeading(d.icon.heading)}if("color" in d.icon){g.getColor().set(this.util.parseColor(d.icon.color))}if("hotSpot" in d.icon){this.dom.setVec2(g.getHotSpot(),d.icon.hotSpot)}}if(d.label){var b=f.getLabelStyle();if(typeof d.label=="string"){d.label={color:d.label}}if("scale" in d.label){b.setScale(d.label.scale)}if("color" in d.label){b.getColor().set(this.util.parseColor(d.label.color))}}if(d.line){var a=f.getLineStyle();if(typeof d.line=="string"){d.line={color:d.line}}if("width" in d.line){a.setWidth(d.line.width)}if("color" in d.line){a.getColor().set(this.util.parseColor(d.line.color))}}if(d.poly){var c=f.getPolyStyle();if(typeof d.poly=="string"){d.poly={color:d.poly}}if("fill" in d.poly){c.setFill(d.poly.fill)}if("outline" in d.poly){c.setOutline(d.poly.outline)}if("color" in d.poly){c.getColor().set(this.util.parseColor(d.poly.color))}}}});GEarthExtensions.prototype.dom.clearFeatures=function(){var a=this.pluginInstance.getFeatures();var b;while((b=a.getLastChild())!==null){a.removeChild(b)}};GEarthExtensions.prototype.dom.walk=function(){var a;if(arguments.length==1){if(geo.util.isObjectLiteral(arguments[0])){a=arguments[0]}else{if(geo.util.isFunction(arguments[0])){a={visitCallback:arguments[0]}}else{throw new TypeError("walk requires a visit callback function or options literal as a first parameter")}}}else{throw new Error("walk takes at most 1 arguments")}if(!("visitCallback" in a)){throw new Error("walk requires a visit callback function")}if(!("features" in a)){a.features=true}if(!("geometries" in a)){a.geometries=false}if(!("rootObject" in a)){a.rootObject=this.pluginInstance}var b=function(e,d){var k={current:d,child:d};var f=a.visitCallback.call(e,k);if(!f&&!geo.util.isUndefined(f)){return}var j=null;if("getFeatures" in e){if(a.features){j=e.getFeatures()}}else{if("getGeometry" in e){if(a.geometries&&e.getGeometry()){b(e.getGeometry(),k.child)}}else{if("getGeometries" in e){if(a.geometries){j=e.getGeometries()}}else{if("getInnerBoundaries" in e){if(a.geometries){j=e.getInnerBoundaries()}}}}}if(j&&j.hasChildNodes()){var l=j.getChildNodes();var h=l.getLength();for(var g=0;g<h;g++){var c=l.item(g);b(c,k.child)}}};if(a.rootObject){b(a.rootObject,a.rootContext)}};GEarthExtensions.prototype.dom.getObjectById=function(c,b){b=GEarthExtensions.checkParameters(b,false,{recursive:true,root:this.pluginInstance});if("getId" in b.root&&b.root.getId()==c){return b.root}var a=null;testext_.dom.walk({rootObject:b.root,features:true,geometries:true,visitCallback:function(){if(this.getId()==c){a=this;return false}}})};GEarthExtensions.prototype.dom.removeObject=function(a){var b=a.getParentNode();var c=null;if("getFeatures" in b){c=b.getFeatures()}else{if("getGeometries" in b){c=b.getGeometries()}else{if("getInnerBoundaries" in b){c=b.getInnerBoundaries()}}}c.removeChild(a)};GEarthExtensions.prototype.dom.setVec2=function(d,c){c=GEarthExtensions.checkParameters(c,false,{left:GEarthExtensions.ALLOWED,top:GEarthExtensions.ALLOWED,right:GEarthExtensions.ALLOWED,bottom:GEarthExtensions.ALLOWED});var b=0;var a=this.pluginInstance.UNITS_PIXELS;var f=0;var e=this.pluginInstance.UNITS_PIXELS;if("left" in c){if(typeof c.left=="number"){b=c.left}else{if(typeof c.left=="string"&&c.left.charAt(c.left.length-1)=="%"){b=parseFloat(c.left)/100;a=this.pluginInstance.UNITS_FRACTION}else{throw new TypeError("left must be a number or string indicating a percentage")}}}else{if("right" in c){if(typeof c.right=="number"){b=c.right;a=this.pluginInstance.UNITS_INSET_PIXELS}else{if(typeof c.right=="string"&&c.right.charAt(c.right.length-1)=="%"){b=1-parseFloat(c.right)/100;a=this.pluginInstance.UNITS_FRACTION}else{throw new TypeError("right must be a number or string indicating a percentage")}}}}if("bottom" in c){if(typeof c.bottom=="number"){f=c.bottom}else{if(typeof c.bottom=="string"&&c.bottom.charAt(c.bottom.length-1)=="%"){f=parseFloat(c.bottom)/100;e=this.pluginInstance.UNITS_FRACTION}else{throw new TypeError("bottom must be a number or string indicating a percentage")}}}else{if("top" in c){if(typeof c.top=="number"){f=c.top;e=this.pluginInstance.UNITS_INSET_PIXELS}else{if(typeof c.top=="string"&&c.top.charAt(c.top.length-1)=="%"){f=1-parseFloat(c.top)/100;e=this.pluginInstance.UNITS_FRACTION}else{throw new TypeError("top must be a number or string indicating a percentage")}}}}d.set(b,a,f,e)};GEarthExtensions.prototype.dom.buildLookAt=GEarthExtensions.domBuilder_({apiInterface:"KmlLookAt",apiFactoryFn:"createLookAt",defaultProperty:"point",propertySpec:{copy:GEarthExtensions.ALLOWED,point:GEarthExtensions.REQUIRED,heading:GEarthExtensions.ALLOWED,tilt:GEarthExtensions.ALLOWED,range:GEarthExtensions.ALLOWED},constructor:function(c,b){var a=new geo.Point(b.point);var e={heading:0,tilt:0,range:1000};if(b.copy){var d=this.util.getLookAt(e.altitudeMode);e.heading=d.getHeading();e.tilt=d.getTilt();e.range=d.getRange()}b=GEarthExtensions.checkParameters(b,true,e);c.set(a.lat(),a.lng(),a.altitude(),a.altitudeMode(),b.heading,b.tilt,b.range)}});GEarthExtensions.prototype.dom.buildCamera=GEarthExtensions.domBuilder_({apiInterface:"KmlCamera",apiFactoryFn:"createCamera",defaultProperty:"point",propertySpec:{copy:GEarthExtensions.ALLOWED,point:GEarthExtensions.REQUIRED,heading:GEarthExtensions.ALLOWED,tilt:GEarthExtensions.ALLOWED,roll:GEarthExtensions.ALLOWED},constructor:function(d,c){var a=new geo.Point(c.point);var e={heading:0,tilt:0,roll:0};if(c.copy){var b=this.util.getCamera(e.altitudeMode);e.heading=b.getHeading();e.tilt=b.getTilt();e.roll=b.getRoll()}c=GEarthExtensions.checkParameters(c,true,e);d.set(a.lat(),a.lng(),a.altitude(),a.altitudeMode(),c.heading,c.tilt,c.roll)}});GEarthExtensions.prototype.edit={isnamespace_:true};(function(){var d=null;var c="_GEarthExtensions_dragData";function a(i,h,f,k){var j=i.util.getJsDataValue(h,c)||{};d={placemark:h,dragCallback:j.draggableOptions.dragCallback,dropCallback:j.draggableOptions.dropCallback,dragged:false};if(j.draggableOptions.bounce){i.fx.cancel(d.placemark);i.fx.bounce(d.placemark,{phase:1})}if(j.draggableOptions.draggingStyle){j.oldStyle=d.placemark.getStyleSelector();d.placemark.setStyleSelector(j.draggableOptions.draggingStyle)}if(j.draggableOptions.targetScreenOverlay){var g=i.dom.buildScreenOverlay(j.draggableOptions.targetScreenOverlay);i.dom.setVec2(g.getOverlayXY(),{left:f,top:k});i.pluginInstance.getFeatures().appendChild(g);d.activeTargetScreenOverlay=g}}function e(f){return function(h){if(d){h.preventDefault();if(!h.getDidHitGlobe()){return}if(d.activeTargetScreenOverlay){f.dom.setVec2(d.activeTargetScreenOverlay.getOverlayXY(),{left:h.getClientX(),top:h.getClientY()})}var g=d.placemark.getGeometry();g.setLatitude(h.getLatitude());g.setLongitude(h.getLongitude());d.dragged=true;if(d.dragCallback){d.dragCallback.call(d.placemark)}}}}function b(f,h){if(d){var g=f.util.getJsDataValue(d.placemark,c)||{};if(g.oldStyle){d.placemark.setStyleSelector(g.oldStyle);delete g.oldStyle}if(d.activeTargetScreenOverlay){f.pluginInstance.getFeatures().removeChild(d.activeTargetScreenOverlay);delete d.activeTargetScreenOverlay}if(g.draggableOptions.bounce){f.fx.cancel(d.placemark);f.fx.bounce(d.placemark,{startAltitude:0,phase:2,repeat:1,dampen:0.3})}if(d.dragged&&d.dropCallback&&!h){d.dropCallback.call(d.placemark)}d=null}}GEarthExtensions.prototype.edit.makeDraggable=function(i,h){this.edit.endDraggable(i);h=GEarthExtensions.checkParameters(h,false,{bounce:true,dragCallback:GEarthExtensions.ALLOWED,dropCallback:GEarthExtensions.ALLOWED,draggingStyle:GEarthExtensions.ALLOWED,targetScreenOverlay:GEarthExtensions.ALLOWED});var j=this;var g=e(j);var k;k=function(l){if(d&&l.getButton()==0){google.earth.removeEventListener(j.pluginInstance.getWindow(),"mousemove",g);google.earth.removeEventListener(j.pluginInstance.getWindow(),"mouseup",k);if(d.dragged){l.preventDefault()}b(j)}};var f=function(l){if(l.getButton()==0){a(j,l.getTarget(),l.getClientX(),l.getClientY());google.earth.addEventListener(j.pluginInstance.getWindow(),"mousemove",g);google.earth.addEventListener(j.pluginInstance.getWindow(),"mouseup",k)}};this.util.setJsDataValue(i,c,{draggableOptions:h,abortAndEndFn:function(){if(d&&d.placemark.equals(i)){google.earth.removeEventListener(j.pluginInstance.getWindow(),"mousemove",g);google.earth.removeEventListener(j.pluginInstance.getWindow(),"mouseup",k);b(j,true)}google.earth.removeEventListener(i,"mousedown",f)}});google.earth.addEventListener(i,"mousedown",f)};GEarthExtensions.prototype.edit.endDraggable=function(f){var g=this.util.getJsDataValue(f,c);if(g){g.abortAndEndFn.call();this.util.clearJsDataValue(f,c)}};GEarthExtensions.prototype.edit.place=function(i,h){h=GEarthExtensions.checkParameters(h,false,{bounce:true,dragCallback:GEarthExtensions.ALLOWED,dropCallback:GEarthExtensions.ALLOWED,draggingStyle:GEarthExtensions.ALLOWED,targetScreenOverlay:GEarthExtensions.ALLOWED});var j=this;var g=e(j);var f;f=function(k){if(d&&k.getButton()==0){google.earth.removeEventListener(j.pluginInstance.getWindow(),"mousemove",g);google.earth.removeEventListener(j.pluginInstance.getWindow(),"mousedown",f);b(j)}};this.util.setJsDataValue(i,c,{draggableOptions:h,abortAndEndFn:function(){if(d&&d.placemark.equals(i)){google.earth.removeEventListener(j.pluginInstance.getWindow(),"mousemove",g);google.earth.removeEventListener(j.pluginInstance.getWindow(),"mousedown",f);b(j,true)}google.earth.removeEventListener(i,"mousedown",f)}});a(j,i,-999,-999);google.earth.addEventListener(j.pluginInstance.getWindow(),"mousemove",g);google.earth.addEventListener(j.pluginInstance.getWindow(),"mousedown",f)}}());(function(){var a="_GEarthExtensions_lineStringEditData";GEarthExtensions.prototype.edit.drawLineString=function(g){var e=this.util.getJsDataValue(g,a)||{};if(e){this.edit.endEditLineString(g)}var j=g.getCoordinates();var l=this.pluginInstance.parseKml('<Document><Style id="_GEarthExtensions_regularPlacemark"><IconStyle><Icon><href>http://maps.google.com/mapfiles/kml/shapes/placemark_circle.png</href></Icon></IconStyle></Style></Document>');var h=this;var i=[];var f=false;var k=null;var c;c=function(){k=h.dom.buildPointPlacemark([100,0],{style:"#_GEarthExtensions_regularPlacemark"});l.getFeatures().appendChild(k);i.push(k);h.edit.place(k,{dropCallback:function(){if(!f){j.pushLatLngAlt(k.getGeometry().getLatitude(),k.getGeometry().getLongitude(),0);setTimeout(c,0)}}})};c.call(null);var d=function(){h.edit.endDraggable(k);f=true;h.dom.removeObject(l);i=[];h.util.clearJsDataValue(g,a)};var b=function(m){m.preventDefault();d.call(null)};google.earth.addEventListener(h.pluginInstance.getWindow(),"dblclick",b);this.pluginInstance.getFeatures().appendChild(l);this.util.setJsDataValue(g,a,{abortAndEndFn:function(){d.call(null);google.earth.removeEventListener(h.pluginInstance.getWindow(),"dblclick",b)}})};GEarthExtensions.prototype.edit.editLineString=function(k){var h=this.util.getJsDataValue(k,a)||{};if(h){this.edit.endEditLineString(k)}var n=this;var p=(k.getType()=="KmlLinearRing");var o=k.getCoordinates();var m=o.getLength();var q=this.pluginInstance.parseKml('<Document><Style id="_GEarthExtensions_regularPlacemark"><IconStyle><Icon><href>http://maps.google.com/mapfiles/kml/shapes/placemark_circle.png</href></Icon></IconStyle></Style><StyleMap id="_GEarthExtensions_midPlacemark"><Pair><key>normal</key><Style><IconStyle><Icon><href>http://maps.google.com/mapfiles/kml/shapes/placemark_circle.png</href></Icon><color>60ffffff</color><scale>0.75</scale></IconStyle></Style></Pair><Pair><key>highlight</key><styleUrl>#_GEarthExtensions_regularPlacemark</styleUrl></Pair></StyleMap></Document>');var g=[];var d=function(i){return function(s){s.preventDefault();for(j=i.index;j<m-1;j++){o.set(j,o.get(j+1))}o.pop();var t=null;if(i.index>0||p){var r=i.index-1;if(r<0){r+=m}t=g[r]}m--;if(i.rightMidPlacemark==null&&t){n.edit.endDraggable(t.rightMidPlacemark);n.dom.removeObject(t.rightMidPlacemark);t.rightMidPlacemark=null}if(i.rightMidPlacemark){n.edit.endDraggable(i.rightMidPlacemark);n.dom.removeObject(i.rightMidPlacemark)}n.edit.endDraggable(i.regularPlacemark);google.earth.removeEventListener(i.regularPlacemark,"dblclick",i.deleteEventListener);n.dom.removeObject(i.regularPlacemark);g.splice(i.index,1);for(j=0;j<m;j++){g[j].index=j}if(t){t.regularDragCallback.call(t.regularPlacemark,t)}}};var f=function(i){return function(){o.setLatLngAlt(i.index,this.getGeometry().getLatitude(),this.getGeometry().getLongitude(),0);var r=o.get(i.index);if(i.index>0||p){var s=i.index-1;if(s<0){s+=m}var t=new geo.Point(o.get(s)).midpoint(new geo.Point(r));g[s].rightMidPlacemark.getGeometry().setLatitude(t.lat());g[s].rightMidPlacemark.getGeometry().setLongitude(t.lng())}if(i.index<m-1||p){var u=new geo.Point(r).midpoint(new geo.Point(o.get((i.index+1)%m)));i.rightMidPlacemark.getGeometry().setLatitude(u.lat());i.rightMidPlacemark.getGeometry().setLongitude(u.lng())}}};var c=function(i){var r=false;var s=null;return function(){if(!r){r=true;var t;this.setStyleUrl("#_GEarthExtensions_regularPlacemark");o.push(o.get(m-1));for(t=m-1;t>i.index+1;t--){o.set(t,o.get(t-1))}m++;s={};s.index=i.index+1;s.regularPlacemark=this;i.rightMidPlacemark=n.dom.buildPointPlacemark({point:o.get(i.index),style:"#_GEarthExtensions_midPlacemark"});q.getFeatures().appendChild(i.rightMidPlacemark);n.edit.makeDraggable(i.rightMidPlacemark,{bounce:false,dragCallback:c(i)});s.rightMidPlacemark=n.dom.buildPointPlacemark({point:o.get(i.index),style:"#_GEarthExtensions_midPlacemark"});q.getFeatures().appendChild(s.rightMidPlacemark);n.edit.makeDraggable(s.rightMidPlacemark,{bounce:false,dragCallback:c(s)});s.deleteEventListener=d(s);google.earth.addEventListener(this,"dblclick",s.deleteEventListener);s.regularDragCallback=f(s);g.splice(s.index,0,s);for(t=0;t<m;t++){g[t].index=t}}s.regularDragCallback.call(this,s)}};for(var j=0;j<m;j++){var b=o.get(j);var l=o.get((j+1)%m);var e={};g.push(e);e.index=j;e.regularPlacemark=n.dom.buildPointPlacemark(b,{style:"#_GEarthExtensions_regularPlacemark"});q.getFeatures().appendChild(e.regularPlacemark);e.regularDragCallback=f(e);n.edit.makeDraggable(e.regularPlacemark,{bounce:false,dragCallback:e.regularDragCallback});e.deleteEventListener=d(e);google.earth.addEventListener(e.regularPlacemark,"dblclick",e.deleteEventListener);if(j<m-1||p){e.rightMidPlacemark=n.dom.buildPointPlacemark({point:new geo.Point(b).midpoint(new geo.Point(l)),style:"#_GEarthExtensions_midPlacemark"});q.getFeatures().appendChild(e.rightMidPlacemark);n.edit.makeDraggable(e.rightMidPlacemark,{bounce:false,dragCallback:c(e)})}}this.pluginInstance.getFeatures().appendChild(q);this.util.setJsDataValue(k,a,{innerDoc:q,abortAndEndFn:function(){var r;for(r=0;r<g.length;r++){google.earth.removeEventListener(g[r].regularPlacemark,"dblclick",g[r].deleteEventListener);n.edit.endDraggable(g[r].regularPlacemark);if(g[r].rightMidPlacemark){n.edit.endDraggable(g[r].rightMidPlacemark)}}n.dom.removeObject(q)}})};GEarthExtensions.prototype.edit.endEditLineString=function(c){var b=this.util.getJsDataValue(c,a);if(b){b.abortAndEndFn.call(null);this.util.clearJsDataValue(c,a)}}})();GEarthExtensions.prototype.fx={isnamespace_:true};GEarthExtensions.prototype.fx.getAnimationManager_=function(){if(!this.animationManager_){this.animationManager_=new this.fx.AnimationManager_(this)}return this.animationManager_};GEarthExtensions.prototype.fx.AnimationManager_=GEarthExtensions.createClass_(function(a){this.extInstance=a;this.animations_=[];this.running_=false;this.globalTime_=0});GEarthExtensions.prototype.fx.AnimationManager_.prototype.startAnimation=function(a){this.animations_.push({obj:a,startGlobalTime:this.globalTime_});this.start_()};GEarthExtensions.prototype.fx.AnimationManager_.prototype.stopAnimation=function(b){for(var a=0;a<this.animations_.length;a++){if(this.animations_[a].obj==b){this.animations_.splice(a,1);return}}};GEarthExtensions.prototype.fx.AnimationManager_.prototype.start_=function(){if(this.running_){return}this.startTimeStamp_=Number(new Date());this.tick_();for(var a=0;a<this.animations_.length;a++){this.animations_[a].obj.renderFrame(0)}var b=this;this.frameendListener_=function(){b.tick_()};this.tickInterval_=window.setInterval(this.frameendListener_,100);google.earth.addEventListener(this.extInstance.pluginInstance,"frameend",this.frameendListener_);this.running_=true};GEarthExtensions.prototype.fx.AnimationManager_.prototype.stop_=function(){if(!this.running_){return}google.earth.removeEventListener(this.extInstance.pluginInstance,"frameend",this.frameendListener_);this.frameendListener_=null;window.clearInterval(this.tickInterval_);this.tickInterval_=null;this.running_=false;this.globalTime_=0};GEarthExtensions.prototype.fx.AnimationManager_.prototype.tick_=function(){if(!this.running_){return}this.globalTime_=Number(new Date())-this.startTimeStamp_;this.renderCurrentFrame_()};GEarthExtensions.prototype.fx.AnimationManager_.prototype.renderCurrentFrame_=function(){for(var a=this.animations_.length-1;a>=0;a--){var b=this.animations_[a];b.obj.renderFrame(this.globalTime_-b.startGlobalTime)}if(this.animations_.length===0){this.stop_()}};GEarthExtensions.prototype.fx.Animation=GEarthExtensions.createClass_(function(){});GEarthExtensions.prototype.fx.Animation.prototype.start=function(){this.extInstance.fx.getAnimationManager_().startAnimation(this)};GEarthExtensions.prototype.fx.Animation.prototype.stop=function(){this.extInstance.fx.getAnimationManager_().stopAnimation(this);this.renderFrame(0)};GEarthExtensions.prototype.fx.Animation.prototype.renderFrame=function(a){};GEarthExtensions.prototype.fx.GenericSimpleAnimation=GEarthExtensions.createClass_([GEarthExtensions.prototype.fx.Animation],function(b,c,a){this.extInstance=b;this.duration=c;this.renderFn=a});GEarthExtensions.prototype.fx.GenericSimpleAnimation.prototype.renderFrame=function(a){if(a>this.duration){this.stop();this.renderFn.call(this,this.duration);return}this.renderFn.call(this,a)};GEarthExtensions.prototype.fx.bounce=function(e,d){this.fx.rewind(e);d=GEarthExtensions.checkParameters(d,false,{duration:250,startAltitude:GEarthExtensions.ALLOWED,altitude:this.util.getCamera().getAltitude()/5,phase:GEarthExtensions.ALLOWED,repeat:0,dampen:1,callback:GEarthExtensions.ALLOWED});if(!"getGeometry" in e||!e.getGeometry()||e.getGeometry().getType()!="KmlPoint"){throw new Error("Placemark must be a KmlPoint geometry")}var a=e.getGeometry();if(a.getAltitudeMode()==this.pluginInstance.ALTITUDE_CLAMP_TO_GROUND){a.setAltitude(0);a.setAltitudeMode(this.pluginInstance.ALTITUDE_RELATIVE_TO_GROUND)}var g=a.getAltitude();if("startAltitude" in d){g=d.startAltitude}var c,b;var f=this;c=function(){f.fx.animateProperty(a,"altitude",{duration:d.duration/2,end:g+d.altitude,easing:"out",callback:b})};b=function(){f.fx.animateProperty(a,"altitude",{duration:d.duration/2,end:g,easing:"in",callback:function(){if(d.repeat>=1){--d.repeat;d.altitude*=d.dampen;d.phase=0;f.fx.bounce(e,d)}else{if(d.callback){d.callback.call(e)}}}})};if(d.phase===1){b=null;c.call()}else{if(d.phase===2){b.call()}else{c.call()}}};GEarthExtensions.prototype.fx.cancel=function(b){var c=this.util.getJsDataValue(b,"_GEarthExtensions_anim")||[];for(var a=0;a<c.length;a++){c[a].stop()}};GEarthExtensions.prototype.fx.rewind=function(b){var c=this.util.getJsDataValue(b,"_GEarthExtensions_anim")||[];for(var a=0;a<c.length;a++){c[a].rewind()}};GEarthExtensions.prototype.fx.animateProperty=function(f,e,b){b=GEarthExtensions.checkParameters(b,false,{duration:500,start:GEarthExtensions.ALLOWED,end:GEarthExtensions.ALLOWED,delta:GEarthExtensions.ALLOWED,easing:"none",callback:GEarthExtensions.ALLOWED});if(typeof b.easing=="string"){b.easing={none:function(i){return i},"in":function(i){return i*i*i},out:function(j){var k=j*j;var i=k*j;return i-3*k+3*j},both:function(j){var k=j*j;var i=k*j;return 6*i*k-15*k*k+10*i}}[b.easing]}var h=e.charAt(0).toUpperCase()+e.substr(1);var c=this;var a=function(){return c.util.callMethod(f,"get"+h)};var g=function(i){return c.util.callMethod(f,"set"+h,i)};if(!isFinite(b.start)&&!isFinite(b.end)){if(!isFinite(b.delta)){b.delta=0}b.start=a();b.end=a()+b.delta}else{if(!isFinite(b.start)){b.start=a()}if(!isFinite(b.end)){b.end=a()}}var d=new this.fx.GenericSimpleAnimation(this,b.duration,function(i){g(b.start+b.easing.call(null,1*i/b.duration)*(b.end-b.start));if(i==b.duration&&b.callback){b.callback.call(f)}});d.start()};GEarthExtensions.prototype.util={isnamespace_:true};GEarthExtensions.NAMED_COLORS={aqua:"ffffff00",black:"ff000000",blue:"ffff0000",fuchsia:"ffff00ff",gray:"ff808080",green:"ff008000",lime:"ff00ff00",maroon:"ff000080",navy:"ff800000",olive:"ff008080",purple:"ff800080",red:"ff0000ff",silver:"ffc0c0c0",teal:"ff808000",white:"ffffffff",yellow:"ff00ffff"};GEarthExtensions.prototype.util.parseColor=function(a){if(geo.util.isArray(a)){var b=function(c){return((c.length<2)?"0":"")+c};return b(((a.length>=4)?a[3].toString(16):"ff"))+b(a[2].toString(16))+b(a[1].toString(16))+b(a[0].toString())}else{if(typeof a=="string"){if(a.toLowerCase() in GEarthExtensions.NAMED_COLORS){return GEarthExtensions.NAMED_COLORS[a.toLowerCase()]}if(a.length>7){return a}else{if(a.length>4){return a.replace(/#?([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})/i,"ff$3$2$1").toLowerCase()}else{return a.replace(/#?([0-9a-f])([0-9a-f])([0-9a-f])/i,"ff$3$3$2$2$1$1").toLowerCase()}}}}};GEarthExtensions.prototype.util.blendColors=function(b,a,c){if(geo.util.isUndefined(c)||c===null){c=0.5}b=this.util.parseColor(b);a=this.util.parseColor(a);var d=function(f){return((f.length<2)?"0":"")+f};var e=function(g,f){g=parseInt(g,16);f=parseInt(f,16);return d(Math.floor((f-g)*c+g).toString(16))};return e(b.substr(0,2),a.substr(0,2))+e(b.substr(2,2),a.substr(2,2))+e(b.substr(4,2),a.substr(4,2))+e(b.substr(6,2),a.substr(6,2))};(function(){var a={};function c(){var e=[],f="0123456789ABCDEF",d=0;for(d=0;d<36;d++){e[d]=Math.floor(Math.random()*16)}e[14]=4;e[19]=(e[19]&3)|8;for(d=0;d<36;d++){e[d]=f.charAt(e[d])}e[8]=e[13]=e[18]=e[23]="-";return e.join("")}function b(e){for(var d in a){if(a[d].object.equals(e)){return d}}return null}GEarthExtensions.prototype.util.hasJsData=function(d){return b(d)?true:false};GEarthExtensions.prototype.util.clearAllJsData=function(e){var d=b(e);if(d){delete a[d]}};GEarthExtensions.prototype.util.getJsDataValue=function(e,f){var d=b(e);if(d&&f in a[d].data){return a[d].data[f]}return undefined};GEarthExtensions.prototype.util.setJsDataValue=function(e,f,g){var d=b(e);if(!d){d=null;while(!d||d in a){d=c()}a[d]={object:e,data:{}}}a[d].data[f]=g};GEarthExtensions.prototype.util.clearJsDataValue=function(f,g){var d=b(f);if(d&&g in a[d].data){delete a[d].data[g];for(var e in a[d].data){return}this.util.clearAllJsData(f)}}}());(function(){GEarthExtensions.prototype.util.serializeView=function(){var g=this.pluginInstance.getView().copyAsCamera(this.pluginInstance.ALTITUDE_ABSOLUTE);return this.util.encodeCamera_({lat:g.getLatitude(),lng:g.getLongitude(),altitude:g.getAltitude(),heading:g.getHeading(),tilt:g.getTilt(),roll:g.getRoll()})};GEarthExtensions.prototype.util.deserializeView=function(i){var h=this.util.decodeCamera_(i);var g=this.pluginInstance.createCamera("");g.set(h.lat,h.lng,h.altitude,this.pluginInstance.ALTITUDE_ABSOLUTE,h.heading,h.tilt,h.roll);this.pluginInstance.getView().setAbstractView(g)};GEarthExtensions.prototype.util.encodeCamera_=function(h){var g=1073741824;var i=Math.floor(h.altitude*100000);return c([Math.floor(b(h.lat)*100000),Math.floor(b(h.lng)*100000),Math.floor(i/g),(i>=0)?i%g:(g-Math.abs(i)%g),Math.floor(f(h.heading)*100000),Math.floor(f(h.tilt)*100000),Math.floor(f(h.roll)*100000)])};GEarthExtensions.prototype.util.decodeCamera_=function(h){var i=1073741824;var g=a(h);return{lat:g[0]*0.00001,lng:g[1]*0.00001,altitude:(i*g[2]+g[3])*0.00001,heading:g[4]*0.00001,tilt:g[5]*0.00001,roll:g[6]*0.00001}};var e="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_";function c(g){var j="";for(var h=0;h<g.length;h++){j+=d(g[h])}return j}function f(g){while(g<0){g+=360}return g%360}function b(g){g=f(g);return(g>180)?g-360:g}function d(h){var i=h<<1;if(h<0){i=~(i)}var g="";while(i>=32){g+=e.charAt(32|(i&31));i>>=5}g+=e.charAt(i);return g}function a(l){var i=l.length;var k=0;var m=[];while(k<i){var h;var j=0;var g=0;do{h=e.indexOf(l.charAt(k++));g|=(h&31)<<j;j+=5}while(h>=32);m.push(((g&1)?~(g>>1):(g>>1)))}return m}}());GEarthExtensions.prototype.util.lookAt=function(){this.pluginInstance.getView().setAbstractView(this.dom.buildLookAt.apply(null,arguments))};GEarthExtensions.prototype.util.getLookAt=function(a){if(geo.util.isUndefined(a)){a=this.pluginInstance.ALTITUDE_ABSOLUTE}return this.pluginInstance.getView().copyAsLookAt(a)};GEarthExtensions.prototype.util.getCamera=function(a){if(geo.util.isUndefined(a)){a=this.pluginInstance.ALTITUDE_ABSOLUTE}return this.pluginInstance.getView().copyAsCamera(a)};GEarthExtensions.prototype.util.displayKml=function(b,a){a=a||{};if(a.cacheBuster){b+=(b.match(/\?/)?"&":"?")+"_cacheBuster="+Number(new Date()).toString()}google.earth.fetchKml(this.pluginInstance,b,function(c){if(c){this.pluginInstance.getFeatures().appendChild(c)}})};GEarthExtensions.prototype.util.displayKmlString=function(c,a){var b=this.pluginInstance.parseKml(c);this.pluginInstance.getFeatures().appendChild(b)};GEarthExtensions.prototype.util.batchExecute=function(c,a){var b=this;google.earth.fetchKml(this.pluginInstance,"",function(){c.call(b,a)})};GEarthExtensions.prototype.util.callMethod=function(object,method){var i;var args=[];for(i=2;i<arguments.length;i++){args.push(arguments[i])}if(typeof object[method]=="function"){return object[method].apply(object,args)}else{var reprArgs=[];for(i=0;i<args.length;i++){reprArgs.push("args["+i+"]")}return eval("object."+method+"("+reprArgs.join(",")+")")}};