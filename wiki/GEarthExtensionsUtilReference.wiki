#labels Phase-Reference
#summary GEarthExtensions.util Namespace Reference

Defined in [http://code.google.com/p/earth-api-utility-library/source/browse/trunk/extensions/src/util/__init__.js src/util/__init__.js]

This class/namespace hybrid contains miscellaneous utility functions and shortcuts for the Earth API.

<wiki:toc max_depth="2" />

----
=Static Methods=

==batchExecute(batchFn, context)==

Defined in [http://code.google.com/p/earth-api-utility-library/source/browse/trunk/extensions/src/util/shortcuts.js src/util/shortcuts.js]

Executes the given function quickly using a Google Earth API callback hack. Future versions of this method may use other methods for batch execution.

===Parameters:===
  * *batchFn* _{{{Function}}}_  The function containing batch code to execute.
  * *context* _{{{Object}}}_ (Optional) Optional context parameter to pass to the function.

----

==blendColors(color1, color2, fraction)==

Defined in [http://code.google.com/p/earth-api-utility-library/source/browse/trunk/extensions/src/util/color.js src/util/color.js]

Calculates a simple composite of the two given colors.

===Parameters:===
  * *color1* _{{{String}}}|{{{Number}}}`[``]`_  The first ('source') color. Anthing that can be parsed with [GEarthExtensionsUtilReference#parseColor(color,_opacity) GEarthExtensions#util.parseColor].
  * *color2* _{{{String}}}|{{{Number}}}`[``]`_  The second ('destination') color. Anything that can be parsed with [GEarthExtensionsUtilReference#parseColor(color,_opacity) GEarthExtensions#util.parseColor].
  * *fraction* _{{{Number}}}_ (Optional, Default: 0.5) The amount of color2 to composite onto/blend with color1, as a fraction from 0.0 to 1.0.

----

==callMethod(object, method)==

Defined in [http://code.google.com/p/earth-api-utility-library/source/browse/trunk/extensions/src/util/shortcuts.js src/util/shortcuts.js]

Calls method on object with optional arguments. Arguments to pass to the method should be given in order after the 'method' argument.

===Parameters:===
  * *object* _{{{Object}}}_  The object to call the method on.
  * *method* _{{{String}}}_  The method to call.

----

==clearAllJsData(object)==

Defined in [http://code.google.com/p/earth-api-utility-library/source/browse/trunk/extensions/src/util/jsdata.js src/util/jsdata.js]

Clears all JS-side data for the given KmlObject.

===Parameters:===
  * *object* _{{{KmlObject}}}_  The plugin object to clear data on.

----

==clearJsDataValue(object, key)==

Defined in [http://code.google.com/p/earth-api-utility-library/source/browse/trunk/extensions/src/util/jsdata.js src/util/jsdata.js]

Clears the JS-side data for the given KmlObject associated with the given key.

===Parameters:===
  * *object* _{{{KmlObject}}}_  The plugin object to clear data on.
  * *key* _{{{String}}}_  The JS data key whose value should be cleared.

----

==deserializeView(viewString)==

Defined in [http://code.google.com/p/earth-api-utility-library/source/browse/trunk/extensions/src/util/serialization.js src/util/serialization.js]

Sets the current plugin viewport to the view represented by the given string.

===Parameters:===
  * *viewString* _{{{String}}}_  The modified base64 alphabet string representing the view to fly to. This string should've previously been calculated using [GEarthExtensionsUtilReference#serializeView() GEarthExtensions#util.serializeView].

----

==displayKml(url, options)==

Defined in [http://code.google.com/p/earth-api-utility-library/source/browse/trunk/extensions/src/util/shortcuts.js src/util/shortcuts.js]

Simply loads and shows the given KML URL in the Google Earth Plugin instance.

===Parameters:===
  * *url* _{{{String}}}_  The URL of the KML content to show.
  * *options* _{{{Object}}}_ (Optional) KML display options.
    * *cacheBuster* _{{{Boolean}}}_ (Optional) Enforce freshly downloading the KML by introducing a cache-busting query parameter.

----

==displayKmlString(str, options)==

Defined in [http://code.google.com/p/earth-api-utility-library/source/browse/trunk/extensions/src/util/shortcuts.js src/util/shortcuts.js]

Simply loads and shows the given KML string in the Google Earth Plugin instance.

===Parameters:===
  * *str* _{{{String}}}_  The KML blob string to show.
  * *options* _{{{Object}}}_ (Optional) KML display options. There are currently no options.

----

==getCamera(altitudeMode)==

Defined in [http://code.google.com/p/earth-api-utility-library/source/browse/trunk/extensions/src/util/shortcuts.js src/util/shortcuts.js]

Gets the current view as a KmlCamera.

===Parameters:===
  * *altitudeMode* _{{{Number}}}_ (Optional, Default: ALTITUDE_ABSOLUTE) The altitude mode that the resulting camera should be in.

===Type:===
{{{KmlCamera}}}

===Returns:===

Returns the current view as a KmlCamera.

----

==getJsDataValue(object, key)==

Defined in [http://code.google.com/p/earth-api-utility-library/source/browse/trunk/extensions/src/util/jsdata.js src/util/jsdata.js]

Gets the JS-side data for the given KmlObject associated with the given key.

===Parameters:===
  * *object* _{{{KmlObject}}}_  The plugin object to get data for.
  * *key* _{{{String}}}_  The JS data key to request.

----

==getLookAt(altitudeMode)==

Defined in [http://code.google.com/p/earth-api-utility-library/source/browse/trunk/extensions/src/util/shortcuts.js src/util/shortcuts.js]

Gets the current view as a KmlLookAt.

===Parameters:===
  * *altitudeMode* _{{{Number}}}_ (Optional, Default: ALTITUDE_ABSOLUTE) The altitude mode that the resulting LookAt should be in.

===Type:===
{{{KmlLookAt}}}

===Returns:===

Returns the current view as a KmlLookAt.

----

==hasJsData(object)==

Defined in [http://code.google.com/p/earth-api-utility-library/source/browse/trunk/extensions/src/util/jsdata.js src/util/jsdata.js]

Returns whether or not the KmlObject has any JS-side data.

===Parameters:===
  * *object* _{{{KmlObject}}}_  The plugin object to inquire about.

----

==lookAt()==

Defined in [http://code.google.com/p/earth-api-utility-library/source/browse/trunk/extensions/src/util/shortcuts.js src/util/shortcuts.js]

Creates a KmlLookAt and sets it as the Earth plugin's view. This function takes the same parameters as [GEarthExtensionsDomReference#buildLookAt(point,_options) GEarthExtensions#dom.buildLookAt].

----

==parseColor(color, opacity)==

Defined in [http://code.google.com/p/earth-api-utility-library/source/browse/trunk/extensions/src/util/color.js src/util/color.js]

Converts between various color formats, i.e. `#rrggbb`, to the KML color format (`aabbggrr`)

===Parameters:===
  * *color* _{{{String}}}|{{{Number}}}`[``]`_  The source color value.
  * *opacity* _{{{Number}}}_ (Optional) An optional opacity to go along with CSS/HTML style colors, from 0.0 to 1.0.

===Type:===
{{{String}}}

===Returns:===

_{{{String}}}_ A string in KML color format (`aabbggrr`), or null if the color could not be parsed.

----

==serializeView()==

Defined in [http://code.google.com/p/earth-api-utility-library/source/browse/trunk/extensions/src/util/serialization.js src/util/serialization.js]

Serializes the current plugin viewport into a modified base64 alphabet string. This method is platform and browser agnostic, and is safe to store and distribute to others.

===Type:===
{{{String}}}

===Returns:===

_{{{String}}}_ A string representing the current viewport.

===See:===

http://code.google.com/apis/maps/documentation/include/polyline.js
    for inspiration.

----

==setJsDataValue(object, key, value)==

Defined in [http://code.google.com/p/earth-api-utility-library/source/browse/trunk/extensions/src/util/jsdata.js src/util/jsdata.js]

Sets the JS-side data for the given KmlObject associated with the given key to the passed in value.

===Parameters:===
  * *object* _{{{KmlObject}}}_  The object to get data for.
  * *key* _{{{String}}}_  The JS data key to set.
  * *value* _*_  The value to store for this key.

----

==takeOverCamera(enable)==

Defined in [http://code.google.com/p/earth-api-utility-library/source/browse/trunk/extensions/src/util/shortcuts.js src/util/shortcuts.js]

Enables or disables full camera ownership mode, which sets fly to speed to teleport, disables user mouse interaction, and hides the navigation controls.

===Parameters:===
  * *enable* _{{{Boolean}}}_  Whether to enable or disable full camera ownership.

