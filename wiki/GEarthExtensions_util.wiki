#labels Phase-Reference

This is the reference for the GEarthExtensions.util Namespace.

This class/namespace hybrid contains miscellaneous utility functions and shortcuts for the Earth API.



<wiki:toc max_depth="2" />









----
=Static Methods=

==batchExecute(batchFn, context)==

Executes the given function quickly using a Google Earth API callback hack. Future versions of this method may use other methods for batch execution.


===Parameters:===

  * *batchFn* _{{{Function}}}_  The function containing batch code to execute.
  * *context* _{{{Object}}}_ (Optional) Optional context parameter to pass to the function.

----

==blendColors(color1, color2, fraction)==




===Parameters:===

  * *color1*   
  * *color2*   
  * *fraction*   

----

==callMethod(object, method)==

Calls method on object with optional arguments. Arguments to pass to the method should be given in order after the 'method' argument.


===Parameters:===

  * *object* _{{{Object}}}_  The object to call the method on.
  * *method* _{{{String}}}_  The method to call.

----

==clearAllJsData(object)==

Clears all JS-side data for the given KmlObject.


===Parameters:===

  * *object* _{{{KmlObject}}}_  The plugin object to clear data on.

----

==clearJsDataValue(object, key)==

Clears the JS-side data for the given KmlObject associated with the given key.


===Parameters:===

  * *object* _{{{KmlObject}}}_  The plugin object to clear data on.
  * *key* _{{{String}}}_  The data key whose value should be cleared.

----

==decodeCamera_(s)==




===Parameters:===

  * *s*   

----

==deserializeView(s)==




===Parameters:===

  * *s*   

----

==displayKml(url, options)==

Simply loads and shows the given KML URL in the Google Earth Plugin instance.


===Parameters:===

  * *url* _{{{String}}}_  The URL of the KML content to show.
  * *options*   

----

==displayKmlString(str, options)==

Simply loads and shows the given KML string in the Google Earth Plugin instance.


===Parameters:===

  * *str* _{{{String}}}_  The KML blob string to show.
  * *options*   

----

==encodeCamera_(cam)==

******** helper functions, most of which are from http://code.google.com/apis/maps/documentation/include/polyline.js **********


===Parameters:===

  * *cam*   

----

==getCamera(altitudeMode)==

Gets the current view as a KmlCamera.


===Parameters:===

  * *altitudeMode* _{{{Number}}}_ (Optional, Default: ALTITUDE_ABSOLUTE) The altitude mode that the resulting camera should be in.

===Returns:===
KmlCamera


Returns the current view as a KmlCamera.



----

==getJsDataValue(object, key)==

Gets the JS-side data for the given KmlObject associated with the given key.


===Parameters:===

  * *object* _{{{KmlObject}}}_  The plugin object to get data for.
  * *key* _{{{String}}}_  The JSData key to request.

----

==getLookAt(altitudeMode)==

Gets the current view as a KmlLookAt.


===Parameters:===

  * *altitudeMode* _{{{Number}}}_ (Optional, Default: ALTITUDE_ABSOLUTE) The altitude mode that the resulting LookAt should be in.

===Returns:===
KmlLookAt


Returns the current view as a KmlLookAt.



----

==hasJsData(object)==

Returns whether or not the KmlObject has any JS-side data.


===Parameters:===

  * *object* _{{{KmlObject}}}_  The plugin object to inquire about.

----

==lookAt()==

Creates a KmlLookAt and sets it as the Earth plugin's view. This function takes the same parameters as GEarthExtensions#dom.LookAt.


----

==parseColor(arg)==

Converts between various color formats, i.e. '#rrggbb', to the KML color format ('aabbggrr')


===Parameters:===

  * *arg* _{{{String|Number[]}}}_  The source color value.

===Returns:===



A string in KML color format, i.e. 'aabbggrr'



----

==serializeView()==




----

==setJsDataValue(object, key, value)==

Sets the JS-side data for the given KmlObject associated with the given key to the passed in value.


===Parameters:===

  * *object* _{{{KmlObject}}}_  The object to get data for.
  * *key*   
  * *value*   




